//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:stripe_dart_sdk/src/model/invoice_account_tax_ids_inner.dart';
import 'package:stripe_dart_sdk/src/model/connect_account_reference.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'subscriptions_resource_subscription_invoice_settings.g.dart';

/// 
///
/// Properties:
/// * [accountTaxIds] - The account tax IDs associated with the subscription. Will be set on invoices generated by the subscription.
/// * [issuer] 
@BuiltValue()
abstract class SubscriptionsResourceSubscriptionInvoiceSettings implements Built<SubscriptionsResourceSubscriptionInvoiceSettings, SubscriptionsResourceSubscriptionInvoiceSettingsBuilder> {
  /// The account tax IDs associated with the subscription. Will be set on invoices generated by the subscription.
  @BuiltValueField(wireName: r'account_tax_ids')
  BuiltList<InvoiceAccountTaxIdsInner>? get accountTaxIds;

  @BuiltValueField(wireName: r'issuer')
  ConnectAccountReference get issuer;

  SubscriptionsResourceSubscriptionInvoiceSettings._();

  factory SubscriptionsResourceSubscriptionInvoiceSettings([void updates(SubscriptionsResourceSubscriptionInvoiceSettingsBuilder b)]) = _$SubscriptionsResourceSubscriptionInvoiceSettings;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(SubscriptionsResourceSubscriptionInvoiceSettingsBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<SubscriptionsResourceSubscriptionInvoiceSettings> get serializer => _$SubscriptionsResourceSubscriptionInvoiceSettingsSerializer();
}

class _$SubscriptionsResourceSubscriptionInvoiceSettingsSerializer implements PrimitiveSerializer<SubscriptionsResourceSubscriptionInvoiceSettings> {
  @override
  final Iterable<Type> types = const [SubscriptionsResourceSubscriptionInvoiceSettings, _$SubscriptionsResourceSubscriptionInvoiceSettings];

  @override
  final String wireName = r'SubscriptionsResourceSubscriptionInvoiceSettings';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    SubscriptionsResourceSubscriptionInvoiceSettings object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    if (object.accountTaxIds != null) {
      yield r'account_tax_ids';
      yield serializers.serialize(
        object.accountTaxIds,
        specifiedType: const FullType.nullable(BuiltList, [FullType(InvoiceAccountTaxIdsInner)]),
      );
    }
    yield r'issuer';
    yield serializers.serialize(
      object.issuer,
      specifiedType: const FullType(ConnectAccountReference),
    );
  }

  @override
  Object serialize(
    Serializers serializers,
    SubscriptionsResourceSubscriptionInvoiceSettings object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required SubscriptionsResourceSubscriptionInvoiceSettingsBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'account_tax_ids':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(BuiltList, [FullType(InvoiceAccountTaxIdsInner)]),
          ) as BuiltList<InvoiceAccountTaxIdsInner>?;
          if (valueDes == null) continue;
          result.accountTaxIds.replace(valueDes);
          break;
        case r'issuer':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(ConnectAccountReference),
          ) as ConnectAccountReference;
          result.issuer.replace(valueDes);
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  SubscriptionsResourceSubscriptionInvoiceSettings deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = SubscriptionsResourceSubscriptionInvoiceSettingsBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

