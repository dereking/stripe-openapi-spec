//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'payment_method_details_card_present_receipt.g.dart';

/// 
///
/// Properties:
/// * [accountType] - The type of account being debited or credited
/// * [applicationCryptogram] - The Application Cryptogram, a unique value generated by the card to authenticate the transaction with issuers.
/// * [applicationPreferredName] - The Application Identifier (AID) on the card used to determine which networks are eligible to process the transaction. Referenced from EMV tag 9F12, data encoded on the card's chip.
/// * [authorizationCode] - Identifier for this transaction.
/// * [authorizationResponseCode] - EMV tag 8A. A code returned by the card issuer.
/// * [cardholderVerificationMethod] - Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.
/// * [dedicatedFileName] - Similar to the application_preferred_name, identifying the applications (AIDs) available on the card. Referenced from EMV tag 84.
/// * [terminalVerificationResults] - A 5-byte string that records the checks and validations that occur between the card and the terminal. These checks determine how the terminal processes the transaction and what risk tolerance is acceptable. Referenced from EMV Tag 95.
/// * [transactionStatusInformation] - An indication of which steps were completed during the card read process. Referenced from EMV Tag 9B.
@BuiltValue()
abstract class PaymentMethodDetailsCardPresentReceipt implements Built<PaymentMethodDetailsCardPresentReceipt, PaymentMethodDetailsCardPresentReceiptBuilder> {
  /// The type of account being debited or credited
  @BuiltValueField(wireName: r'account_type')
  PaymentMethodDetailsCardPresentReceiptAccountTypeEnum? get accountType;
  // enum accountTypeEnum {  checking,  credit,  prepaid,  unknown,  };

  /// The Application Cryptogram, a unique value generated by the card to authenticate the transaction with issuers.
  @BuiltValueField(wireName: r'application_cryptogram')
  String? get applicationCryptogram;

  /// The Application Identifier (AID) on the card used to determine which networks are eligible to process the transaction. Referenced from EMV tag 9F12, data encoded on the card's chip.
  @BuiltValueField(wireName: r'application_preferred_name')
  String? get applicationPreferredName;

  /// Identifier for this transaction.
  @BuiltValueField(wireName: r'authorization_code')
  String? get authorizationCode;

  /// EMV tag 8A. A code returned by the card issuer.
  @BuiltValueField(wireName: r'authorization_response_code')
  String? get authorizationResponseCode;

  /// Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.
  @BuiltValueField(wireName: r'cardholder_verification_method')
  String? get cardholderVerificationMethod;

  /// Similar to the application_preferred_name, identifying the applications (AIDs) available on the card. Referenced from EMV tag 84.
  @BuiltValueField(wireName: r'dedicated_file_name')
  String? get dedicatedFileName;

  /// A 5-byte string that records the checks and validations that occur between the card and the terminal. These checks determine how the terminal processes the transaction and what risk tolerance is acceptable. Referenced from EMV Tag 95.
  @BuiltValueField(wireName: r'terminal_verification_results')
  String? get terminalVerificationResults;

  /// An indication of which steps were completed during the card read process. Referenced from EMV Tag 9B.
  @BuiltValueField(wireName: r'transaction_status_information')
  String? get transactionStatusInformation;

  PaymentMethodDetailsCardPresentReceipt._();

  factory PaymentMethodDetailsCardPresentReceipt([void updates(PaymentMethodDetailsCardPresentReceiptBuilder b)]) = _$PaymentMethodDetailsCardPresentReceipt;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(PaymentMethodDetailsCardPresentReceiptBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<PaymentMethodDetailsCardPresentReceipt> get serializer => _$PaymentMethodDetailsCardPresentReceiptSerializer();
}

class _$PaymentMethodDetailsCardPresentReceiptSerializer implements PrimitiveSerializer<PaymentMethodDetailsCardPresentReceipt> {
  @override
  final Iterable<Type> types = const [PaymentMethodDetailsCardPresentReceipt, _$PaymentMethodDetailsCardPresentReceipt];

  @override
  final String wireName = r'PaymentMethodDetailsCardPresentReceipt';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    PaymentMethodDetailsCardPresentReceipt object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    if (object.accountType != null) {
      yield r'account_type';
      yield serializers.serialize(
        object.accountType,
        specifiedType: const FullType(PaymentMethodDetailsCardPresentReceiptAccountTypeEnum),
      );
    }
    if (object.applicationCryptogram != null) {
      yield r'application_cryptogram';
      yield serializers.serialize(
        object.applicationCryptogram,
        specifiedType: const FullType.nullable(String),
      );
    }
    if (object.applicationPreferredName != null) {
      yield r'application_preferred_name';
      yield serializers.serialize(
        object.applicationPreferredName,
        specifiedType: const FullType.nullable(String),
      );
    }
    if (object.authorizationCode != null) {
      yield r'authorization_code';
      yield serializers.serialize(
        object.authorizationCode,
        specifiedType: const FullType.nullable(String),
      );
    }
    if (object.authorizationResponseCode != null) {
      yield r'authorization_response_code';
      yield serializers.serialize(
        object.authorizationResponseCode,
        specifiedType: const FullType.nullable(String),
      );
    }
    if (object.cardholderVerificationMethod != null) {
      yield r'cardholder_verification_method';
      yield serializers.serialize(
        object.cardholderVerificationMethod,
        specifiedType: const FullType.nullable(String),
      );
    }
    if (object.dedicatedFileName != null) {
      yield r'dedicated_file_name';
      yield serializers.serialize(
        object.dedicatedFileName,
        specifiedType: const FullType.nullable(String),
      );
    }
    if (object.terminalVerificationResults != null) {
      yield r'terminal_verification_results';
      yield serializers.serialize(
        object.terminalVerificationResults,
        specifiedType: const FullType.nullable(String),
      );
    }
    if (object.transactionStatusInformation != null) {
      yield r'transaction_status_information';
      yield serializers.serialize(
        object.transactionStatusInformation,
        specifiedType: const FullType.nullable(String),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    PaymentMethodDetailsCardPresentReceipt object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required PaymentMethodDetailsCardPresentReceiptBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'account_type':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(PaymentMethodDetailsCardPresentReceiptAccountTypeEnum),
          ) as PaymentMethodDetailsCardPresentReceiptAccountTypeEnum;
          result.accountType = valueDes;
          break;
        case r'application_cryptogram':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.applicationCryptogram = valueDes;
          break;
        case r'application_preferred_name':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.applicationPreferredName = valueDes;
          break;
        case r'authorization_code':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.authorizationCode = valueDes;
          break;
        case r'authorization_response_code':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.authorizationResponseCode = valueDes;
          break;
        case r'cardholder_verification_method':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.cardholderVerificationMethod = valueDes;
          break;
        case r'dedicated_file_name':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.dedicatedFileName = valueDes;
          break;
        case r'terminal_verification_results':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.terminalVerificationResults = valueDes;
          break;
        case r'transaction_status_information':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(String),
          ) as String?;
          if (valueDes == null) continue;
          result.transactionStatusInformation = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  PaymentMethodDetailsCardPresentReceipt deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = PaymentMethodDetailsCardPresentReceiptBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class PaymentMethodDetailsCardPresentReceiptAccountTypeEnum extends EnumClass {

  /// The type of account being debited or credited
  @BuiltValueEnumConst(wireName: r'checking')
  static const PaymentMethodDetailsCardPresentReceiptAccountTypeEnum checking = _$paymentMethodDetailsCardPresentReceiptAccountTypeEnum_checking;
  /// The type of account being debited or credited
  @BuiltValueEnumConst(wireName: r'credit')
  static const PaymentMethodDetailsCardPresentReceiptAccountTypeEnum credit = _$paymentMethodDetailsCardPresentReceiptAccountTypeEnum_credit;
  /// The type of account being debited or credited
  @BuiltValueEnumConst(wireName: r'prepaid')
  static const PaymentMethodDetailsCardPresentReceiptAccountTypeEnum prepaid = _$paymentMethodDetailsCardPresentReceiptAccountTypeEnum_prepaid;
  /// The type of account being debited or credited
  @BuiltValueEnumConst(wireName: r'unknown')
  static const PaymentMethodDetailsCardPresentReceiptAccountTypeEnum unknown = _$paymentMethodDetailsCardPresentReceiptAccountTypeEnum_unknown;

  static Serializer<PaymentMethodDetailsCardPresentReceiptAccountTypeEnum> get serializer => _$paymentMethodDetailsCardPresentReceiptAccountTypeEnumSerializer;

  const PaymentMethodDetailsCardPresentReceiptAccountTypeEnum._(String name): super(name);

  static BuiltSet<PaymentMethodDetailsCardPresentReceiptAccountTypeEnum> get values => _$paymentMethodDetailsCardPresentReceiptAccountTypeEnumValues;
  static PaymentMethodDetailsCardPresentReceiptAccountTypeEnum valueOf(String name) => _$paymentMethodDetailsCardPresentReceiptAccountTypeEnumValueOf(name);
}

