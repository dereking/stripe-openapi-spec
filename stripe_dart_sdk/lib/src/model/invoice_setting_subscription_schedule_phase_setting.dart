//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:stripe_dart_sdk/src/model/invoice_account_tax_ids_inner.dart';
import 'package:stripe_dart_sdk/src/model/connect_account_reference.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'invoice_setting_subscription_schedule_phase_setting.g.dart';

/// 
///
/// Properties:
/// * [accountTaxIds] - The account tax IDs associated with this phase of the subscription schedule. Will be set on invoices generated by this phase of the subscription schedule.
/// * [daysUntilDue] - Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.
/// * [issuer] 
@BuiltValue()
abstract class InvoiceSettingSubscriptionSchedulePhaseSetting implements Built<InvoiceSettingSubscriptionSchedulePhaseSetting, InvoiceSettingSubscriptionSchedulePhaseSettingBuilder> {
  /// The account tax IDs associated with this phase of the subscription schedule. Will be set on invoices generated by this phase of the subscription schedule.
  @BuiltValueField(wireName: r'account_tax_ids')
  BuiltList<InvoiceAccountTaxIdsInner>? get accountTaxIds;

  /// Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.
  @BuiltValueField(wireName: r'days_until_due')
  int? get daysUntilDue;

  @BuiltValueField(wireName: r'issuer')
  ConnectAccountReference? get issuer;

  InvoiceSettingSubscriptionSchedulePhaseSetting._();

  factory InvoiceSettingSubscriptionSchedulePhaseSetting([void updates(InvoiceSettingSubscriptionSchedulePhaseSettingBuilder b)]) = _$InvoiceSettingSubscriptionSchedulePhaseSetting;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(InvoiceSettingSubscriptionSchedulePhaseSettingBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<InvoiceSettingSubscriptionSchedulePhaseSetting> get serializer => _$InvoiceSettingSubscriptionSchedulePhaseSettingSerializer();
}

class _$InvoiceSettingSubscriptionSchedulePhaseSettingSerializer implements PrimitiveSerializer<InvoiceSettingSubscriptionSchedulePhaseSetting> {
  @override
  final Iterable<Type> types = const [InvoiceSettingSubscriptionSchedulePhaseSetting, _$InvoiceSettingSubscriptionSchedulePhaseSetting];

  @override
  final String wireName = r'InvoiceSettingSubscriptionSchedulePhaseSetting';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    InvoiceSettingSubscriptionSchedulePhaseSetting object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    if (object.accountTaxIds != null) {
      yield r'account_tax_ids';
      yield serializers.serialize(
        object.accountTaxIds,
        specifiedType: const FullType.nullable(BuiltList, [FullType(InvoiceAccountTaxIdsInner)]),
      );
    }
    if (object.daysUntilDue != null) {
      yield r'days_until_due';
      yield serializers.serialize(
        object.daysUntilDue,
        specifiedType: const FullType.nullable(int),
      );
    }
    if (object.issuer != null) {
      yield r'issuer';
      yield serializers.serialize(
        object.issuer,
        specifiedType: const FullType.nullable(ConnectAccountReference),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    InvoiceSettingSubscriptionSchedulePhaseSetting object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required InvoiceSettingSubscriptionSchedulePhaseSettingBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'account_tax_ids':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(BuiltList, [FullType(InvoiceAccountTaxIdsInner)]),
          ) as BuiltList<InvoiceAccountTaxIdsInner>?;
          if (valueDes == null) continue;
          result.accountTaxIds.replace(valueDes);
          break;
        case r'days_until_due':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(int),
          ) as int?;
          if (valueDes == null) continue;
          result.daysUntilDue = valueDes;
          break;
        case r'issuer':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType.nullable(ConnectAccountReference),
          ) as ConnectAccountReference?;
          if (valueDes == null) continue;
          result.issuer.replace(valueDes);
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  InvoiceSettingSubscriptionSchedulePhaseSetting deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = InvoiceSettingSubscriptionSchedulePhaseSettingBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

