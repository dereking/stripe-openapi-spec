//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:stripe_dart_sdk/src/model/customer_acceptance.dart';
import 'package:built_collection/built_collection.dart';
import 'package:stripe_dart_sdk/src/model/mandate_payment_method_details.dart';
import 'package:stripe_dart_sdk/src/model/mandate.dart';
import 'package:stripe_dart_sdk/src/model/mandate_single_use.dart';
import 'package:built_value/json_object.dart';
import 'package:stripe_dart_sdk/src/model/mandate_payment_method.dart';
import 'dart:core';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';
import 'package:one_of/any_of.dart';

part 'setup_intent_single_use_mandate.g.dart';

/// ID of the single_use Mandate generated by the SetupIntent.
///
/// Properties:
/// * [customerAcceptance] 
/// * [id] - Unique identifier for the object.
/// * [livemode] - Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
/// * [multiUse] - 
/// * [object] - String representing the object's type. Objects of the same type share the same value.
/// * [onBehalfOf] - The account (if any) that the mandate is intended for.
/// * [paymentMethod] 
/// * [paymentMethodDetails] 
/// * [singleUse] 
/// * [status] - The mandate status indicates whether or not you can use it to initiate a payment.
/// * [type] - The type of the mandate.
@BuiltValue()
abstract class SetupIntentSingleUseMandate implements Built<SetupIntentSingleUseMandate, SetupIntentSingleUseMandateBuilder> {
  /// Any Of [Mandate], [String]
  AnyOf get anyOf;

  SetupIntentSingleUseMandate._();

  factory SetupIntentSingleUseMandate([void updates(SetupIntentSingleUseMandateBuilder b)]) = _$SetupIntentSingleUseMandate;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(SetupIntentSingleUseMandateBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<SetupIntentSingleUseMandate> get serializer => _$SetupIntentSingleUseMandateSerializer();
}

class _$SetupIntentSingleUseMandateSerializer implements PrimitiveSerializer<SetupIntentSingleUseMandate> {
  @override
  final Iterable<Type> types = const [SetupIntentSingleUseMandate, _$SetupIntentSingleUseMandate];

  @override
  final String wireName = r'SetupIntentSingleUseMandate';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    SetupIntentSingleUseMandate object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
  }

  @override
  Object serialize(
    Serializers serializers,
    SetupIntentSingleUseMandate object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final anyOf = object.anyOf;
    return serializers.serialize(anyOf, specifiedType: FullType(AnyOf, anyOf.valueTypes.map((type) => FullType(type)).toList()))!;
  }

  @override
  SetupIntentSingleUseMandate deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = SetupIntentSingleUseMandateBuilder();
    Object? anyOfDataSrc;
    final targetType = const FullType(AnyOf, [FullType(String), FullType(Mandate), ]);
    anyOfDataSrc = serialized;
    result.anyOf = serializers.deserialize(anyOfDataSrc, specifiedType: targetType) as AnyOf;
    return result.build();
  }
}

class SetupIntentSingleUseMandateObjectEnum extends EnumClass {

  /// String representing the object's type. Objects of the same type share the same value.
  @BuiltValueEnumConst(wireName: r'mandate')
  static const SetupIntentSingleUseMandateObjectEnum mandate = _$setupIntentSingleUseMandateObjectEnum_mandate;

  static Serializer<SetupIntentSingleUseMandateObjectEnum> get serializer => _$setupIntentSingleUseMandateObjectEnumSerializer;

  const SetupIntentSingleUseMandateObjectEnum._(String name): super(name);

  static BuiltSet<SetupIntentSingleUseMandateObjectEnum> get values => _$setupIntentSingleUseMandateObjectEnumValues;
  static SetupIntentSingleUseMandateObjectEnum valueOf(String name) => _$setupIntentSingleUseMandateObjectEnumValueOf(name);
}

class SetupIntentSingleUseMandateStatusEnum extends EnumClass {

  /// The mandate status indicates whether or not you can use it to initiate a payment.
  @BuiltValueEnumConst(wireName: r'active')
  static const SetupIntentSingleUseMandateStatusEnum active = _$setupIntentSingleUseMandateStatusEnum_active;
  /// The mandate status indicates whether or not you can use it to initiate a payment.
  @BuiltValueEnumConst(wireName: r'inactive')
  static const SetupIntentSingleUseMandateStatusEnum inactive = _$setupIntentSingleUseMandateStatusEnum_inactive;
  /// The mandate status indicates whether or not you can use it to initiate a payment.
  @BuiltValueEnumConst(wireName: r'pending')
  static const SetupIntentSingleUseMandateStatusEnum pending = _$setupIntentSingleUseMandateStatusEnum_pending;

  static Serializer<SetupIntentSingleUseMandateStatusEnum> get serializer => _$setupIntentSingleUseMandateStatusEnumSerializer;

  const SetupIntentSingleUseMandateStatusEnum._(String name): super(name);

  static BuiltSet<SetupIntentSingleUseMandateStatusEnum> get values => _$setupIntentSingleUseMandateStatusEnumValues;
  static SetupIntentSingleUseMandateStatusEnum valueOf(String name) => _$setupIntentSingleUseMandateStatusEnumValueOf(name);
}

class SetupIntentSingleUseMandateTypeEnum extends EnumClass {

  /// The type of the mandate.
  @BuiltValueEnumConst(wireName: r'multi_use')
  static const SetupIntentSingleUseMandateTypeEnum multiUse = _$setupIntentSingleUseMandateTypeEnum_multiUse;
  /// The type of the mandate.
  @BuiltValueEnumConst(wireName: r'single_use')
  static const SetupIntentSingleUseMandateTypeEnum singleUse = _$setupIntentSingleUseMandateTypeEnum_singleUse;

  static Serializer<SetupIntentSingleUseMandateTypeEnum> get serializer => _$setupIntentSingleUseMandateTypeEnumSerializer;

  const SetupIntentSingleUseMandateTypeEnum._(String name): super(name);

  static BuiltSet<SetupIntentSingleUseMandateTypeEnum> get values => _$setupIntentSingleUseMandateTypeEnumValues;
  static SetupIntentSingleUseMandateTypeEnum valueOf(String name) => _$setupIntentSingleUseMandateTypeEnumValueOf(name);
}

