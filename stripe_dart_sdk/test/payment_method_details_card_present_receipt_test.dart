//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.18

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

import 'package:openapi/api.dart';
import 'package:test/test.dart';

// tests for PaymentMethodDetailsCardPresentReceipt
void main() {
  // final instance = PaymentMethodDetailsCardPresentReceipt();

  group('test PaymentMethodDetailsCardPresentReceipt', () {
    // The type of account being debited or credited
    // String accountType
    test('to test the property `accountType`', () async {
      // TODO
    });

    // The Application Cryptogram, a unique value generated by the card to authenticate the transaction with issuers.
    // String applicationCryptogram
    test('to test the property `applicationCryptogram`', () async {
      // TODO
    });

    // The Application Identifier (AID) on the card used to determine which networks are eligible to process the transaction. Referenced from EMV tag 9F12, data encoded on the card's chip.
    // String applicationPreferredName
    test('to test the property `applicationPreferredName`', () async {
      // TODO
    });

    // Identifier for this transaction.
    // String authorizationCode
    test('to test the property `authorizationCode`', () async {
      // TODO
    });

    // EMV tag 8A. A code returned by the card issuer.
    // String authorizationResponseCode
    test('to test the property `authorizationResponseCode`', () async {
      // TODO
    });

    // Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.
    // String cardholderVerificationMethod
    test('to test the property `cardholderVerificationMethod`', () async {
      // TODO
    });

    // Similar to the application_preferred_name, identifying the applications (AIDs) available on the card. Referenced from EMV tag 84.
    // String dedicatedFileName
    test('to test the property `dedicatedFileName`', () async {
      // TODO
    });

    // A 5-byte string that records the checks and validations that occur between the card and the terminal. These checks determine how the terminal processes the transaction and what risk tolerance is acceptable. Referenced from EMV Tag 95.
    // String terminalVerificationResults
    test('to test the property `terminalVerificationResults`', () async {
      // TODO
    });

    // An indication of which steps were completed during the card read process. Referenced from EMV Tag 9B.
    // String transactionStatusInformation
    test('to test the property `transactionStatusInformation`', () async {
      // TODO
    });


  });

}
