//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.18

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

import 'package:openapi/api.dart';
import 'package:test/test.dart';

// tests for Refund
void main() {
  // final instance = Refund();

  group('test Refund', () {
    // Amount, in cents (or local equivalent).
    // int amount
    test('to test the property `amount`', () async {
      // TODO
    });

    // FeeRefundBalanceTransaction balanceTransaction
    test('to test the property `balanceTransaction`', () async {
      // TODO
    });

    // RefundCharge charge
    test('to test the property `charge`', () async {
      // TODO
    });

    // Time at which the object was created. Measured in seconds since the Unix epoch.
    // int created
    test('to test the property `created`', () async {
      // TODO
    });

    // Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    // String currency
    test('to test the property `currency`', () async {
      // TODO
    });

    // An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only).
    // String description
    test('to test the property `description`', () async {
      // TODO
    });

    // RefundDestinationDetails destinationDetails
    test('to test the property `destinationDetails`', () async {
      // TODO
    });

    // RefundFailureBalanceTransaction failureBalanceTransaction
    test('to test the property `failureBalanceTransaction`', () async {
      // TODO
    });

    // Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.
    // String failureReason
    test('to test the property `failureReason`', () async {
      // TODO
    });

    // Unique identifier for the object.
    // String id
    test('to test the property `id`', () async {
      // TODO
    });

    // For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions.
    // String instructionsEmail
    test('to test the property `instructionsEmail`', () async {
      // TODO
    });

    // Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    // Map<String, String> metadata (default value: const {})
    test('to test the property `metadata`', () async {
      // TODO
    });

    // RefundNextAction nextAction
    test('to test the property `nextAction`', () async {
      // TODO
    });

    // String representing the object's type. Objects of the same type share the same value.
    // String object
    test('to test the property `object`', () async {
      // TODO
    });

    // RefundPaymentIntent paymentIntent
    test('to test the property `paymentIntent`', () async {
      // TODO
    });

    // Provides the reason for why the refund is pending. Possible values are: `processing`, `insufficient_funds`, or `charge_pending`.
    // String pendingReason
    test('to test the property `pendingReason`', () async {
      // TODO
    });

    // PaymentFlowsPaymentIntentPresentmentDetails presentmentDetails
    test('to test the property `presentmentDetails`', () async {
      // TODO
    });

    // Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).
    // String reason
    test('to test the property `reason`', () async {
      // TODO
    });

    // This is the transaction number that appears on email receipts sent for this refund.
    // String receiptNumber
    test('to test the property `receiptNumber`', () async {
      // TODO
    });

    // RefundSourceTransferReversal sourceTransferReversal
    test('to test the property `sourceTransferReversal`', () async {
      // TODO
    });

    // Status of the refund. This can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).
    // String status
    test('to test the property `status`', () async {
      // TODO
    });

    // RefundTransferReversal transferReversal
    test('to test the property `transferReversal`', () async {
      // TODO
    });


  });

}
